name: Build and Deploy Development Service to GKE Cluster

on:
  push:
    branches: ["dev"]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
  REPOSITORY: ${{ secrets.REPOSITORY}}
  IMAGE: ${{ secrets.IMAGE }}
  DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
  DB_NAME: ${{ secrets.DB_NAME_DEV }}
  DB_HOST: ${{ secrets.DB_HOST_DEV }}
  DB_PORT: ${{ secrets.DB_PORT_DEV }}
  DB_DIALECT: ${{ secrets.DB_DIALECT_DEV }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID}}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET}}
  GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI}}
  GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN}}
  GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL}}
  GOOGLE_CLOUD_STORAGE_BUCKET: ${{ secrets.GOOGLE_CLOUD_STORAGE_BUCKET}}
  GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID}}
  GOOGLE_SERVICE_UP_AVATAR_KEY: ${{ secrets.GOOGLE_SERVICE_UP_AVATAR_KEY}}
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY}}
  CONTAINER_PORT: ${{ secrets.PORT}}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: development

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - id: "setup"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Docker configuration
        run: |-
          gcloud auth print-access-token \
            --impersonate-service-account ${{ secrets.ACCOUNT }} | docker login \
            -u oauth2accesstoken \
            --password-stdin https://${{ secrets.GAR_LOCATION }}-docker.pkg.dev

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Configure Dockerfile Port Exposure
        run: |-
          sed -i -e 's~ENV_PORT~'"$CONTAINER_PORT"'~g' .docker/Dockerfile

      - name: Build
        run: |-
          docker build -f .docker/Dockerfile \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      - name: Tag Image with Latest
        run: |-
          docker tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
            "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest"

      - name: Publish
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Configure Target Port in Service
        run: |-
          sed -i -e 's~ENV_TARGET_PORT~'"$CONTAINER_PORT"'~g' base/service.yaml

      - name: Configure Container Port and Image in Deployment
        run: |-
          sed -i -e 's~ENV_GAR_LOCATION~'"$GAR_LOCATION"'~g' base/deployment.yaml
          sed -i -e 's~ENV_REPOSITORY~'"$REPOSITORY"'~g' base/deployment.yaml
          sed -i -e 's~ENV_IMAGE~'"$IMAGE"'~g' base/deployment.yaml
          sed -i -e 's~ENV_PROJECT_ID~'"$PROJECT_ID"'~g' base/deployment.yaml
          sed -i -e 's~ENV_GITHUB_SHA~'"$GITHUB_SHA"'~g' base/deployment.yaml
          sed -i -e 's~ENV_CONTAINER_PORT~'"$CONTAINER_PORT"'~g' base/deployment.yaml

      - name: Configure Database in Secret
        run: |-
          sed -i -e 's~ENV_DB_USERNAME_DEV~'"$DB_USERNAME"'~g' base/secret.yaml
          sed -i -e 's~ENV_DB_PASSWORD_DEV~'"$DB_PASSWORD"'~g' base/secret.yaml
          sed -i -e 's~ENV_DB_NAME_DEV~'"$DB_NAME"'~g' base/secret.yaml
          sed -i -e 's~ENV_DB_HOST_DEV~'"$DB_HOST"'~g' base/secret.yaml
          sed -i -e 's~ENV_DB_PORT_DEV~'"$DB_PORT"'~g' base/secret.yaml
          sed -i -e 's~ENV_DB_DIALECT_DEV~'"$DB_DIALECT"'~g' base/secret.yaml
          sed -i -e 's~ENV_DB_INSTANCE_CONNECTION_NAME_DEV~'"$DB_INSTANCE_CONNECTION_NAME"'~g' base/secret.yaml

      - name: Configure Environment Variables in Secret
        run: |-
          sed -i -e 's~ENV_GOOGLE_SERVICE_UP_AVATAR_KEY~'"$GOOGLE_SERVICE_UP_AVATAR_KEY"'~g' base/secret.yaml
          sed -i -e 's~ENV_JWT_SECRET_KEY~'"$JWT_SECRET_KEY"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_EMAIL~'"$GOOGLE_EMAIL"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_CLOUD_STORAGE_BUCKET~'"$GOOGLE_CLOUD_STORAGE_BUCKET"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_CLOUD_PROJECT_ID~'"$GOOGLE_CLOUD_PROJECT_ID"'~g' base/secret.yaml
          sed -i -e 's~ENV_PORT~'"$PORT"'~g' base/secret.yaml
          sed -i -e 's~ENV_PROJECT_ID~'"$PROJECT_ID"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_CLIENT_ID~'"$GOOGLE_CLIENT_ID"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_CLIENT_SECRET~'"$GOOGLE_CLIENT_SECRET"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_REDIRECT_URI~'"$GOOGLE_REDIRECT_URI"'~g' base/secret.yaml
          sed -i -e 's~ENV_GOOGLE_REFRESH_TOKEN~'"$GOOGLE_REFRESH_TOKEN"'~g' base/secret.yaml

      - name: Deploy
        run: |-
          ./kustomize build base/ | kubectl apply -f -
          kubectl rollout status deployment/renata-backend-api
          kubectl get services -o wide
